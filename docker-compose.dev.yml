version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    container_name: chain-workspace-postgres
    environment:
      POSTGRES_DB: chainworkspace
      POSTGRES_USER: chainuser
      POSTGRES_PASSWORD: chainpass
      POSTGRES_INITDB_ARGS: '--encoding=UTF-8 --lc-collate=C --lc-ctype=C'
    ports:
      - '5435:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U chainuser -d chainworkspace']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chain-workspace-network

  adminer:
    image: adminer:latest
    container_name: chain-workspace-adminer
    ports:
      - '8081:8080'
    environment:
      ADMINER_DEFAULT_SERVER: postgres
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - chain-workspace-network

  redis:
    image: redis:7-alpine
    container_name: chain-workspace-redis
    ports:
      - '6381:6379'
    volumes:
      - redis_data:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - chain-workspace-network

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  chain-workspace-network:
    driver: bridge
